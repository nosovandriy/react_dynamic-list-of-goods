{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","name","id","getAll","fetch","then","response","json","get5First","sort","a","b","localeCompare","slice","getRedGoods","filter","color","App","useState","setGoods","hasLoadingError","setHasLoadingError","dataFromServer","data","goodsFromServer","className","type","onClick","length","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAkB,UAAQ,OAA1B,SACGA,EAAKC,MADCD,EAAKE,U,OCLb,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAP,GAAK,OAAI,YAAIA,GAAOW,MACxB,SAACC,EAAGC,GAAJ,OAAUD,EAAET,KAAKW,cAAcD,EAAEV,SACjCY,MAAM,EAAG,OAGFC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAAAP,GAAK,OAAIA,EAAMiB,QACnB,SAAAf,GAAI,MAAmB,QAAfA,EAAKgB,aCbNC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOpB,EAAP,KAAcqB,EAAd,KACA,EAA8CD,oBAAkB,GAAhE,mBAAOE,EAAP,KAAwBC,EAAxB,KAEMC,EAAc,uCAAG,WAAOC,GAAP,eAAAb,EAAA,sEAEnBW,GAAmB,GAFA,SAGWE,IAHX,OAGbC,EAHa,OAKnBL,EAASK,GALU,gDAOnBH,GAAmB,GAPA,yDAAH,sDAWpB,OACE,sBAAKI,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAML,EAAenB,IAHhC,4BAQA,wBACEuB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAML,EAAed,IAHhC,gCAQA,wBACEkB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAML,EAAeR,IAHhC,4BAQChB,EAAM8B,OAAS,GAAK,cAAC,EAAD,CAAW9B,MAAOA,IACtCsB,GAAmB,0CChD1BS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5b8354f2.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good.id} data-cy=\"good\">\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => [...goods].sort(\n      (a, b) => a.name.localeCompare(b.name),\n    ).slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(\n      good => good.color === 'red',\n    ));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [hasLoadingError, setHasLoadingError] = useState<boolean>(false);\n\n  const dataFromServer = async (data: () => Promise<Good[]>) => {\n    try {\n      setHasLoadingError(false);\n      const goodsFromServer = await data();\n\n      setGoods(goodsFromServer);\n    } catch (error) {\n      setHasLoadingError(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => dataFromServer(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => dataFromServer(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => dataFromServer(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      {goods.length > 0 && <GoodsList goods={goods} />}\n      {hasLoadingError && 'An error occurred when loading data'}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}